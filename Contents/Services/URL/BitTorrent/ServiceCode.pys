################################################################################
import kickasstorrents
import thepiratebay
import themoviedb
import torrent2http
import yts

################################################################################
def MetadataObjectForURL(url):
	metadata_object = None

	if url.startswith(themoviedb.THEMOVIEDB):
		metadata_object = themoviedb.MetadataObjectForURL(url)
	elif url.startswith(kickasstorrents.KICKASSTORRENTS):
		metadata_object = kickasstorrents.MetadataObjectForURL(url)
	elif url.startswith(thepiratebay.THEPIRATEBAY):
		metadata_object = thepiratebay.MetadataObjectForURL(url)
	elif url.startswith(yts.YTS):
		metadata_object = yts.MetadataObjectForURL(url)

	if metadata_object:
		metadata_object.art   = Callback(get_image_async, url=metadata_object.art)
		metadata_object.thumb = Callback(get_image_async, url=metadata_object.thumb)

	return metadata_object

################################################################################
@deferred
def MediaObjectsForURL(url):
	if url.startswith(themoviedb.THEMOVIEDB):
		return themoviedb.MediaObjectsForURL(url, play_torrent)
	elif url.startswith(kickasstorrents.KICKASSTORRENTS):
		return kickasstorrents.MediaObjectsForURL(url, play_torrent)
	elif url.startswith(thepiratebay.THEPIRATEBAY):
		return thepiratebay.MediaObjectsForURL(url, play_torrent)
	elif url.startswith(yts.YTS):
		return yts.MediaObjectsForURL(url, play_torrent)

################################################################################
def get_image_async(url):
	return Redirect(url)

###############################################################################
@indirect
def play_torrent(url, magnet, port=-1):
	return torrent2http.play_torrent(url, magnet, play_torrent, port)
